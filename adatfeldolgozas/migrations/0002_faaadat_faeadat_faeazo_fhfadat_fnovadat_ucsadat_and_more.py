# Generated by Django 4.2.14 on 2024-07-31 12:50

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ER_HTV', '0001_initial'),
        ('adatfeldolgozas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FaaAdat',
            fields=[
                ('faa_adat_id', models.AutoField(primary_key=True, serialize=False)),
                ('zarodas_ossz', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Záródás (%)')),
                ('boritas_flkszint', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Felső koronaszint borítása (%)')),
                ('boritas_alkszint', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Alsó koronaszint borítása (%)')),
                ('boritas_csjszint', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Cserjeszint borítás (%)')),
                ('boritas_gyszint', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Gyepszint borítás (%)')),
                ('faa_adat_kieg', models.CharField(blank=True, max_length=500, verbose_name='Megyjegyzések')),
            ],
            options={
                'verbose_name': 'FAA adatlap',
                'verbose_name_plural': 'FAA adatlapok',
                'db_table': 'd_faa_adat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FaeAdat',
            fields=[
                ('fae_adat_id', models.AutoField(primary_key=True, serialize=False)),
                ('dvkvt', models.CharField(blank=True, max_length=5, null=True)),
                ('d130', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('kerulet', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Kerület')),
                ('toatmero', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Tőátmérő')),
                ('famagassag', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('csonkmagassag', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('pluszertek', models.BooleanField()),
                ('ts_eredet', models.BooleanField()),
                ('or_alak', models.BooleanField()),
                ('df_alak', models.BooleanField()),
                ('fae_adat_kieg', models.CharField(blank=True, max_length=250, null=True)),
                ('transzparencia', models.SmallIntegerField()),
                ('legujabb', models.SmallIntegerField()),
                ('prj_id_aktu', models.IntegerField(blank=True, null=True)),
                ('prj_id_prev', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'FAE egyesfa',
                'verbose_name_plural': 'FAE egyesfák',
                'db_table': 'd_fae_adat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FaeAzo',
            fields=[
                ('fae_id', models.AutoField(primary_key=True, serialize=False)),
                ('fae_mvp_id', models.SmallIntegerField()),
                ('fae_vtav', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Vízszintes távolság (m)')),
                ('fae_dszog', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='Mágneses elhajlás (fok)')),
                ('fae_mdatum', models.DateField(verbose_name='Azonosításkori dátum (é.h.n.)')),
                ('fae_mszog', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Mért irányszög (fok)')),
                ('fae_szog', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('d130_azonositaskor', models.DecimalField(decimal_places=1, help_text='Átmérő helyett mindig a <strong>kerületet</strong> adjuk meg cm-ben! (Az átmérő értéke mentéskor automatikusan számítódik a kerületből.)', max_digits=5, verbose_name='Átmérő (cm)')),
                ('eov_dy', models.FloatField(blank=True, null=True)),
                ('eov_dx', models.FloatField(blank=True, null=True)),
                ('nincsrfi', models.SmallIntegerField(default=0, verbose_name='Lokalizálatlan fa')),
                ('indoklas', models.CharField(blank=True, max_length=500, verbose_name='Indoklás')),
                ('fae_adatokszama', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'FAE',
                'verbose_name_plural': 'FAE azonosítók',
                'db_table': 'd_fae_azo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FhfAdat',
            fields=[
                ('fhf_adat_id', models.AutoField(primary_key=True, serialize=False)),
                ('atmero', models.SmallIntegerField(verbose_name='Átmérő (cm)')),
                ('fhf_adat_megj', models.CharField(blank=True, max_length=250, verbose_name='Megjegyzés')),
            ],
            options={
                'verbose_name': 'FHF adatrekord',
                'verbose_name_plural': 'FHF adatrekordok',
                'db_table': 'd_fhf_adat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FNovAdat',
            fields=[
                ('nov_adat_id', models.AutoField(primary_key=True, serialize=False)),
                ('nov_elofordul', models.BooleanField()),
                ('nov_boritas', models.DecimalField(blank=True, decimal_places=1, max_digits=8, null=True)),
                ('nov_gyakorisag', models.SmallIntegerField(blank=True, null=True)),
                ('nov_ohjtszam', models.SmallIntegerField(blank=True, null=True)),
                ('nov_adatsor', models.CharField(max_length=250)),
                ('fl01', models.BooleanField()),
                ('fl02', models.BooleanField()),
                ('fl03', models.BooleanField()),
                ('fl04', models.BooleanField()),
                ('fl05', models.BooleanField()),
                ('fl06', models.BooleanField()),
                ('fl07', models.BooleanField()),
                ('fl08', models.BooleanField()),
                ('fl09', models.BooleanField()),
                ('fl10', models.BooleanField()),
                ('fl11', models.BooleanField()),
                ('fl12', models.BooleanField()),
                ('fl13', models.BooleanField()),
                ('fl14', models.BooleanField()),
                ('fl15', models.BooleanField()),
                ('fl16', models.BooleanField()),
                ('fl17', models.BooleanField()),
                ('fl18', models.BooleanField()),
                ('fl19', models.BooleanField()),
                ('fl20', models.BooleanField()),
                ('fl21', models.BooleanField()),
                ('fl22', models.BooleanField()),
                ('fl23', models.BooleanField()),
                ('fl24', models.BooleanField()),
                ('fl25', models.BooleanField()),
                ('fl26', models.BooleanField()),
                ('fl27', models.BooleanField()),
                ('fl28', models.BooleanField()),
                ('fl29', models.BooleanField()),
                ('fl30', models.BooleanField()),
                ('nov_adatokszama', models.IntegerField()),
                ('nov_van', models.BooleanField()),
            ],
            options={
                'verbose_name': 'ANOV adatrekord',
                'verbose_name_plural': 'ANOV adatrekordok',
                'db_table': 'f_nov_adat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UcsAdat',
            fields=[
                ('ucs_adat_id', models.AutoField(primary_key=True, serialize=False)),
                ('uju_ohjtszam', models.SmallIntegerField()),
                ('uju_rhjtszam', models.SmallIntegerField()),
                ('uju_adatsor', models.CharField(max_length=250)),
                ('uju_van', models.BooleanField()),
                ('cse_ohjtszam', models.SmallIntegerField()),
                ('cse_rhjtszam', models.SmallIntegerField()),
                ('cse_adatsor', models.CharField(max_length=250)),
                ('cse_van', models.BooleanField()),
                ('ucs_adatokszama', models.IntegerField()),
            ],
            options={
                'verbose_name': 'UJCS adatrekord',
                'verbose_name_plural': 'UJCS adatrekordok',
                'db_table': 'e_ucs_adat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='XAdatSta',
            fields=[
                ('adat_sta_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('adat_sta_rnev', models.CharField(max_length=10)),
                ('adat_sta_leiras', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'x_adat_sta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='XEga',
            fields=[
                ('ega_id', models.AutoField(primary_key=True, serialize=False)),
                ('ega_rnev', models.CharField(max_length=5)),
                ('ega_nev', models.CharField(max_length=25)),
                ('ega_leiras', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'x_ega',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='XKrh',
            fields=[
                ('krh_id', models.AutoField(primary_key=True, serialize=False)),
                ('krh_rnev', models.CharField(max_length=5)),
                ('krh_nev', models.CharField(max_length=25)),
                ('krh_leiras', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'x_krh',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='XLek',
            fields=[
                ('lek_id', models.AutoField(primary_key=True, serialize=False)),
                ('lek_rnev', models.CharField(max_length=5)),
                ('lek_nev', models.CharField(max_length=25)),
                ('lek_leiras', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'x_lek',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='XSzh',
            fields=[
                ('szh_id', models.AutoField(primary_key=True, serialize=False)),
                ('szh_rnev', models.CharField(max_length=5)),
                ('szh_nev', models.CharField(max_length=25)),
                ('szh_leiras', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'x_szh',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='XVzh',
            fields=[
                ('vzh_id', models.AutoField(primary_key=True, serialize=False)),
                ('vzh_rnev', models.CharField(max_length=5)),
                ('vzh_nev', models.CharField(max_length=25)),
                ('vzh_leiras', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'x_vzh',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='ErhtvFaaAdatlap',
        ),
        migrations.CreateModel(
            name='JegyzokonyvANOV',
            fields=[
            ],
            options={
                'verbose_name': 'ANOV adatok',
                'verbose_name_plural': 'ANOV adatlapok',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ER_HTV.jegyzokonyv',),
        ),
        migrations.CreateModel(
            name='JegyzokonyvFAA',
            fields=[
            ],
            options={
                'verbose_name': 'FAA adatok',
                'verbose_name_plural': 'FAA adatlapok',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ER_HTV.jegyzokonyv',),
        ),
        migrations.CreateModel(
            name='JegyzokonyvFAEadat',
            fields=[
            ],
            options={
                'verbose_name': 'FAE egyesfa adatok',
                'verbose_name_plural': 'FAE egyesfa adatlapok',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ER_HTV.jegyzokonyv',),
        ),
        migrations.CreateModel(
            name='JegyzokonyvFAEazon',
            fields=[
            ],
            options={
                'verbose_name': 'FAE AZON adatok',
                'verbose_name_plural': 'FAE AZON fák azonosítása',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ER_HTV.jegyzokonyv',),
        ),
        migrations.CreateModel(
            name='JegyzokonyvFHF',
            fields=[
            ],
            options={
                'verbose_name': 'FHF adatok',
                'verbose_name_plural': 'FHF adatlapok',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ER_HTV.jegyzokonyv',),
        ),
        migrations.CreateModel(
            name='JegyzokonyvUJCS',
            fields=[
            ],
            options={
                'verbose_name': 'UJCS adatok',
                'verbose_name_plural': 'UJCS adatlapok',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('ER_HTV.jegyzokonyv',),
        ),
    ]
