# This module is auto generated by Django and holds the models which correspond to the database.
from datetime import datetime

from django.db import models
from project_creation.models.seged_models import XTxn_fields


class Emberek(models.Model):
    emberid = models.AutoField(db_column='emberID', primary_key=True)  # Field name made lowercase.
    nev = models.CharField(max_length=25, blank=True, null=True)
    eletkor = models.IntegerField(blank=True, null=True)
    varosid = models.ForeignKey('Varosok', models.DO_NOTHING, db_column='varosID')  # Field name made lowercase.
    ido = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_emberek'


class Hfx2Erh54(models.Model):
    id = models.CharField(primary_key=True, db_column='ID', max_length=5, blank=True)  # Field name made lowercase.
    eov_y = models.DecimalField(db_column='EOV_Y', max_digits=28, decimal_places=0, blank=True,
                                null=True)  # Field name made lowercase.
    eov_x = models.DecimalField(db_column='EOV_X', max_digits=28, decimal_places=0, blank=True,
                                null=True)  # Field name made lowercase.
    eov_z = models.DecimalField(db_column='EOV_Z', max_digits=28, decimal_places=0, blank=True,
                                null=True)  # Field name made lowercase.
    megj = models.CharField(db_column='MEGJ', max_length=25, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx2_ERH54'



class HfxErh02Jo(models.Model):
    ert_id = models.SmallIntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=5, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=28, decimal_places=1, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=28, decimal_places=1, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=28, decimal_places=1, blank=True, null=True)
    mvp_wgs84_fi = models.DecimalField(max_digits=28, decimal_places=10, blank=True, null=True)
    mvp_wgs84_lambda = models.DecimalField(max_digits=28, decimal_places=10, blank=True, null=True)
    mvp_mtvz = models.CharField(max_length=5, blank=True, null=True)
    megjegyzes = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_ERH02JO'


class HfxErh22(models.Model):
    mvp = models.CharField(db_column='MVP', max_length=5, blank=True, null=True)  # Field name made lowercase.
    eovy = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    eovx = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    pontossag = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    tortenet = models.CharField(max_length=15, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_ERH22'


class HfxErh24(models.Model):
    ert_id = models.IntegerField()
    mvp_azo = models.CharField(max_length=25, blank=True, null=True)
    eovx = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    eovy = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    mvp_mtvz = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_ERH24'


class HfxErh54(models.Model):
    id = models.CharField(primary_key=True, db_column='ID', max_length=5, blank=True)  # Field name made lowercase.
    eov_y = models.DecimalField(db_column='EOV_Y', max_digits=2, decimal_places=0, blank=True,
                                null=True)  # Field name made lowercase.
    eov_x = models.DecimalField(db_column='EOV_X', max_digits=2, decimal_places=0, blank=True,
                                null=True)  # Field name made lowercase.
    eov_z = models.DecimalField(db_column='EOV_Z', max_digits=2, decimal_places=0, blank=True,
                                null=True)  # Field name made lowercase.
    megj = models.CharField(db_column='MEGJ', max_length=25, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_ERH54'


class HfxErh7(models.Model):
    kod = models.CharField(db_column='KOD', max_length=5, blank=True, null=True)  # Field name made lowercase.
    eov_x = models.DecimalField(db_column='EOV_X', max_digits=10, decimal_places=1, blank=True,
                                null=True)  # Field name made lowercase.
    eov_y = models.DecimalField(db_column='EOV_Y', max_digits=10, decimal_places=1, blank=True,
                                null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_ERH7'


class HfxGondorKonica(models.Model):
    prj_id = models.BigIntegerField(blank=True, null=True)
    mvp_id = models.BigIntegerField(blank=True, null=True)
    csoport_id = models.BigIntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=10, blank=True, null=True)
    hfmegj = models.CharField(db_column='HFMEGJ', max_length=25, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_Gondor&Konica'


class HfxDedai(models.Model):
    ert_id = models.IntegerField()
    mvp_azo = models.CharField(max_length=25)
    x = models.FloatField(blank=True, null=True)
    xx = models.DecimalField(max_digits=18, decimal_places=0, blank=True, null=True)
    xxx = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_dedai'


class HfxEh21(models.Model):
    ert_id = models.DecimalField(db_column='ERT_ID', max_digits=18, decimal_places=0, blank=True,
                                 null=True)  # Field name made lowercase.
    mvp = models.CharField(db_column='MVP', max_length=5, blank=True, null=True)  # Field name made lowercase.
    eovy = models.DecimalField(db_column='EOVY', max_digits=18, decimal_places=0, blank=True,
                               null=True)  # Field name made lowercase.
    eovx = models.DecimalField(db_column='EOVX', max_digits=18, decimal_places=0, blank=True,
                               null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_eh21'


class HfxEr07Eh2(models.Model):
    ert_id = models.IntegerField()
    mvp_azo = models.CharField(max_length=25)
    mvp_pontossag = models.DecimalField(max_digits=10, decimal_places=0)

    class Meta:
        managed = False
        db_table = '_hfx_er-07_eh2'


class HfxEr21Eh02Ext(models.Model):
    ert_id = models.DecimalField(max_digits=3, decimal_places=0, blank=True, null=True)
    mvp_azo = models.CharField(max_length=10, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=3, decimal_places=0, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_er-21_eh02ext'


class HfxEr33Eh2(models.Model):
    cimke = models.CharField(db_column='CIMKE', max_length=255, blank=True, null=True)  # Field name made lowercase.
    eov_x = models.FloatField(db_column='EOV_X', blank=True, null=True)  # Field name made lowercase.
    eov_y = models.FloatField(db_column='EOV_Y', blank=True, null=True)  # Field name made lowercase.
    ert_id = models.IntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_er-33_eh2'


class HfxEr58Eh3(models.Model):
    ert_id = models.IntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=25, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=9, decimal_places=1, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=9, decimal_places=1, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_er-58_eh3'


class HfxEr03Eh(models.Model):
    ert_id = models.IntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=25, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_er_03_eh'


class HfxErh05(models.Model):
    ert_id = models.IntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=5, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=28, decimal_places=1, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=28, decimal_places=1, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=28, decimal_places=1, blank=True, null=True)
    mvp_wgs84_fi = models.DecimalField(max_digits=28, decimal_places=10, blank=True, null=True)
    mvp_wgs84_lambda = models.DecimalField(max_digits=28, decimal_places=10, blank=True, null=True)
    mvp_mtvz = models.CharField(max_length=5, blank=True, null=True)
    megjegyzes = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_erh05'


class HfxErh363(models.Model):
    mvpx = models.CharField(db_column='MVPX', max_length=5, blank=True, null=True)  # Field name made lowercase.
    eov_xx = models.DecimalField(db_column='EOV_XX', max_digits=10, decimal_places=2, blank=True,
                                 null=True)  # Field name made lowercase.
    eov_yy = models.DecimalField(db_column='EOV_YY', max_digits=10, decimal_places=2, blank=True,
                                 null=True)  # Field name made lowercase.
    pontossag = models.IntegerField(db_column='PONTOSSAG', blank=True, null=True)  # Field name made lowercase.
    mtxvz = models.CharField(db_column='MTXVZ', max_length=5, blank=True, null=True)  # Field name made lowercase.
    ertxid = models.IntegerField(db_column='ERTXID', blank=True, null=True)  # Field name made lowercase.
    mvpxid = models.IntegerField(db_column='MVPXID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_erh363'


class HfxErh40Es42(models.Model):
    ert_id = models.IntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=25, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    megjegyzes = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_erh40es42'


class HfxErh46(models.Model):
    mvpid = models.CharField(db_column='MVPID', max_length=5, blank=True, null=True)  # Field name made lowercase.
    x_coord = models.DecimalField(db_column='X_COORD', max_digits=18, decimal_places=2, blank=True,
                                  null=True)  # Field name made lowercase.
    y_coord = models.DecimalField(db_column='Y_COORD', max_digits=18, decimal_places=2, blank=True,
                                  null=True)  # Field name made lowercase.
    pntssg = models.DecimalField(db_column='PNTSSG', max_digits=18, decimal_places=2, blank=True,
                                 null=True)  # Field name made lowercase.
    mtvz = models.CharField(db_column='MTVZ', max_length=5, blank=True, null=True)  # Field name made lowercase.
    eovz = models.DecimalField(db_column='EOVZ', max_digits=18, decimal_places=2, blank=True,
                               null=True)  # Field name made lowercase.
    megjegyzes = models.CharField(db_column='MEGJEGYZES', max_length=25, blank=True,
                                  null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_erh46'


class HfxErh51Es47(models.Model):
    ert_id = models.IntegerField(blank=True, null=True)
    mvp_azo = models.CharField(max_length=25, blank=True, null=True)
    mvp_eov_x = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    mvp_eov_y = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    mvp_pontossag = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    megjegyzes = models.CharField(max_length=25, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_erh51es47'


class HfxErh52(models.Model):
    mvp = models.CharField(db_column='MVP', max_length=6, blank=True, null=True)  # Field name made lowercase.
    eovx = models.DecimalField(max_digits=9, decimal_places=0, blank=True, null=True)
    eovy = models.DecimalField(max_digits=9, decimal_places=0, blank=True, null=True)
    mtvz = models.CharField(db_column='MTVZ', max_length=5, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_erh52'


class HfxErh53(models.Model):
    mvpid = models.CharField(db_column='MVPID', max_length=5, blank=True, null=True)  # Field name made lowercase.
    eovy = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    eovx = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    pntssg = models.DecimalField(max_digits=10, decimal_places=0, blank=True, null=True)
    mtvz = models.CharField(db_column='MTVZ', max_length=5, blank=True, null=True)  # Field name made lowercase.
    megj = models.CharField(db_column='MEGJ', max_length=25, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_erh53'


class HfxInsertBaktai(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_baktai'


class HfxInsertBeregmind(models.Model):
    fae_adat_id = models.BigIntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_beregmind'


class HfxInsertDravasikmind(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_dravasikmind'


class HfxInsertFenyierdo(models.Model):
    fae_adat_id = models.BigIntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_fenyierdo'


class HfxInsertHvNiSz(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_hv_ni_sz'


class HfxInsertJuhdoglo(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_juhdoglo'


class HfxInsertKecskes(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_kecskes'


class HfxInsertKekes(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_kekes'


class HfxInsertTiloserdo(models.Model):
    fae_adat_id = models.BigIntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_tiloserdo'


class HfxInsertTiloserdo2(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_tiloserdo2'


class HfxInsertVarhegy(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_varhegy'


class HfxInsertVetyem(models.Model):
    fae_adat_id = models.IntegerField(blank=True, null=True)
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_insert_vetyem'


class HfxKlzsvprd2012(models.Model):
    klzsvprd2012 = models.CharField(db_column='KlzsVprd2012', max_length=5, blank=True,
                                    null=True)  # Field name made lowercase.
    valto_d130 = models.SmallIntegerField(blank=True, null=True)
    q1 = models.FloatField(blank=True, null=True)
    q2 = models.FloatField(blank=True, null=True)
    egntaj = models.CharField(db_column='EGNTAJ', max_length=15, blank=True, null=True)  # Field name made lowercase.
    egtaj_id = models.SmallIntegerField(blank=True, null=True)
    b1 = models.FloatField(blank=True, null=True)
    b2 = models.FloatField(blank=True, null=True)
    egtaj_ffaj = models.CharField(max_length=10, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_klzsvprd2012'


class HfxMansys(models.Model):
    mvp_id = models.SmallIntegerField(blank=True, null=True)
    prj_id = models.SmallIntegerField(blank=True, null=True)
    csoport_id = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_mansys'


class HfxMvpAspect(models.Model):
    mvp_id = models.IntegerField(blank=True, null=True)
    aspect2 = models.IntegerField(db_column='ASPECT2', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_mvp_aspect'


class HfxMvpSlope(models.Model):
    mvpxid = models.IntegerField(blank=True, null=True)
    slope = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_mvp_slope'


class HfxMvpTszfm(models.Model):
    mvpxid = models.IntegerField(blank=True, null=True)
    tszfm = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_hfx_mvp_tszfm'


class HfxMvpWgs(models.Model):
    mvp_id = models.IntegerField(db_column='MVP_ID', blank=True, null=True)  # Field name made lowercase.
    field_wgslat = models.DecimalField(db_column=' WGSLAT', max_digits=14, decimal_places=10, blank=True,
                                       null=True)  # Field name made lowercase. Field renamed to remove unsuitable characters. Field renamed because it started with '_'.
    field_wgslon = models.DecimalField(db_column=' WGSLON', max_digits=14, decimal_places=10, blank=True,
                                       null=True)  # Field name made lowercase. Field renamed to remove unsuitable characters. Field renamed because it started with '_'.
    field_x = models.DecimalField(db_column=' X', max_digits=8, decimal_places=2, blank=True,
                                  null=True)  # Field name made lowercase. Field renamed to remove unsuitable characters. Field renamed because it started with '_'.

    class Meta:
        managed = False
        db_table = '_hfx_mvp_wgs'


class HfxMvpsel1(models.Model):
    mvp_id = models.BigIntegerField(db_column='MVP_ID', blank=True, null=True)  # Field name made lowercase.
    wgslat = models.DecimalField(db_column='WGSLAT', max_digits=15, decimal_places=11, blank=True,
                                 null=True)  # Field name made lowercase.
    wgslon = models.DecimalField(db_column='WGSLON', max_digits=15, decimal_places=11, blank=True,
                                 null=True)  # Field name made lowercase.
    locname = models.CharField(db_column='LocName', max_length=50, blank=True, null=True)  # Field name made lowercase.
    slctd1 = models.BigIntegerField(db_column='SLCTD1', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = '_hfx_mvpsel1'


class Varosok(models.Model):
    varosid = models.AutoField(db_column='varosID', primary_key=True)  # Field name made lowercase.
    varosnev = models.CharField(max_length=25, blank=True, null=True)
    varosmegjegyz = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = '_varosok'


class Log(models.Model):
    naplo_id = models.AutoField(primary_key=True)
    naplo_datum = models.DateTimeField(verbose_name='Naplóbejegyzés időpontja')
    naplo_szerepkor_id = models.IntegerField(verbose_name='Személy')
    naplo_akc = models.ForeignKey('Action', models.DO_NOTHING, verbose_name='Tevékenység')
    naplo_alkalmazas_azo = models.CharField(max_length=5, default='AdFel')
    naplo_prgresz_azo = models.CharField(max_length=5, default='n. a.')
    naplo_mvp_id = models.IntegerField(default=1, verbose_name='MVP azonosító')

    def __str__(self):
        return f'Napló {self.naplo_id} - {self.naplo_datum}'

    class Meta:
        managed = False
        db_table = 'a_naplo'
        verbose_name = 'Tevékenységnapló'
        verbose_name_plural = 'Tevékenységnaplók'


class Project(models.Model):
    MINDKESZ_CHOICES = [(1, 'Minden adatbevitel kész'), (2, 'Még nem kész minden')]
    GENERAL_CHOICES = [(0, 'Tervezett'), (1, 'Kész'), (2, 'Nincs tervezve'), (3, 'Nincs adat'), (4, 'Kimaradt')]
    OTHER_CHOICES = [(0, 'Tervezett'), (1, 'Kész'), (2, 'Nincs tervezve')]

    prj_id = models.AutoField(primary_key=True)
    prj_rnev = models.CharField('Rövid név', unique=True, max_length=25, default='')
    prj_nev = models.CharField("Név", max_length=250, default='')
    prj_ert = models.ForeignKey('ForestReserve', verbose_name='ER terület',
                                on_delete=models.DO_NOTHING)
    prj_vez = models.ForeignKey('Person', verbose_name='Vezető', on_delete=models.DO_NOTHING)
    prj_ev = models.SmallIntegerField("Vonatkoztatási év")
    prj_hanyadikfelmeres = models.CharField("Hányadik felmérés", max_length=10, default='első')
    prj_kovetkezo_ev = models.SmallIntegerField("Következő felmérés éve", default=0)
    prj_sta = models.ForeignKey('Status', verbose_name="Státusz", default=5,
                                on_delete=models.DO_NOTHING)
    prj_leiras = models.CharField("Leírás", max_length=4000, default='')
    prj_url = models.CharField("Honlap", max_length=100, default='https://www.erdorezervatum.hu')
    prj_elozo_prj_id = models.IntegerField(default=0)
    prj_elozo_faaprj_id = models.IntegerField(default=0)
    prj_elozo_faeprj_id = models.IntegerField(default=0)
    prj_elozo_fhfprj_id = models.IntegerField(default=0)
    prj_elozo_ucsprj_id = models.IntegerField(default=0)
    prj_elozo_cseprj_id = models.IntegerField(default=0)
    prj_elozo_ujuprj_id = models.IntegerField(default=0)
    prj_elozo_novprj_id = models.IntegerField(default=0)
    prj_elozo_tszprj_id = models.IntegerField(default=0)
    prj_elozo_trmprj_id = models.IntegerField(default=0)
    prj_elozo_fotprj_id = models.IntegerField(default=0)
    prj_elozo_mgjprj_id = models.IntegerField(default=0)
    prj_elozo_tipprj_id = models.IntegerField(default=0)
    prj_elozo_mvpprj_id = models.IntegerField(default=0)
    prj_elozo_tgdprj_id = models.IntegerField(default=0)
    prj_erh_terv_kesz = models.SmallIntegerField(default=2)
    prj_flm_terv_kesz = models.SmallIntegerField(default=2)
    prj_mindkesz = models.SmallIntegerField(default=2, verbose_name='Minden kész', choices=MINDKESZ_CHOICES)
    prj_faa_kesz = models.SmallIntegerField(default=2, verbose_name='Faállomány kész', choices=GENERAL_CHOICES)
    prj_fae_kesz = models.SmallIntegerField(default=2, verbose_name='Egyes fák kész', choices=GENERAL_CHOICES)
    prj_fhf_kesz = models.SmallIntegerField(default=2, verbose_name='Fekvő holtfa kész', choices=GENERAL_CHOICES)
    prj_ucs_kesz = models.SmallIntegerField(default=2, verbose_name='Újulat/cserje kész', choices=GENERAL_CHOICES)
    prj_nov_kesz = models.SmallIntegerField(default=2, verbose_name='Aljnövényzet kész', choices=GENERAL_CHOICES)
    prj_tsz_kesz = models.SmallIntegerField(default=2)
    prj_trm_kesz = models.SmallIntegerField(default=2)
    prj_fot_kesz = models.SmallIntegerField(default=2, verbose_name='Fotófeltöltés kész', choices=GENERAL_CHOICES)
    prj_fot_fokonyvtar = models.CharField(max_length=150, default='c:\c_erdo_fotok\\')
    prj_mgj_fsz_kesz = models.SmallIntegerField(default=2)
    prj_mgj_ucs_kesz = models.SmallIntegerField(default=2)
    prj_mgj_nov_kesz = models.SmallIntegerField(default=2)
    prj_mgj_trm_kesz = models.SmallIntegerField(default=2)
    prj_mgj_kesz = models.SmallIntegerField(default=2, verbose_name='Megjegyzések kész', choices=OTHER_CHOICES)
    prj_tip_kesz = models.SmallIntegerField(default=2, verbose_name='Erdőtipizálás kész', choices=OTHER_CHOICES)
    prj_mvp_kesz = models.SmallIntegerField(default=2)
    prj_tgd_kesz = models.SmallIntegerField(default=2)
    prj_ert_dszog = models.DecimalField("Mágneses elhajlás szöge", max_digits=5, decimal_places=1, default=3.6)
    prj_ert_ddatum = models.DateTimeField("Felmérés dátuma", default=datetime.strptime('2005/01/28', '%Y/%m/%d'))
    prj_tmd_faasz_id = models.SmallIntegerField("FAÁSZ tervezett módszertan azonosítója", default=1)
    prj_tmd_faa = models.ForeignKey('XModFaa', verbose_name="faa tervezett módszertan", on_delete=models.DO_NOTHING,
                                    default=2)
    prj_tmd_fae = models.ForeignKey('XModFae', verbose_name="fae tervezett módszertan",
                                    on_delete=models.DO_NOTHING, default=2)
    prj_tmd_fhf = models.ForeignKey('XModFhf', verbose_name="fhf tervezett módszertan",
                                    on_delete=models.DO_NOTHING, default=4)
    prj_tmd_ujcs = models.ForeignKey('XModUjcs', verbose_name="ujcs tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=3)
    prj_tmd_anov = models.ForeignKey('XModAnov', verbose_name="anov tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=1)
    prj_tmd_term = models.ForeignKey('XModTerm', verbose_name="term tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=1)
    prj_tmd_tszel = models.ForeignKey('XModTszel', verbose_name="tszel tervezett módszertan",
                                      on_delete=models.DO_NOTHING, default=1)
    prj_tmd_foto = models.ForeignKey('XModFoto', verbose_name="foto tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=1)
    prj_tmd_megj = models.ForeignKey('XModMegj', verbose_name="megj tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=1)
    prj_tmd_tipi = models.ForeignKey('XModTipi', verbose_name="tipi tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=1)
    prj_tmd_mvpk = models.ForeignKey('XModMvpk', verbose_name="mvpk tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=2)
    prj_tmd_tgdk = models.ForeignKey('XModTgdk', verbose_name="tgdk tervezett módszertan",
                                     on_delete=models.DO_NOTHING, default=1)

    def __str__(self):
        return self.prj_nev

    class Meta:
        managed = False
        db_table = 'a_prj'
        verbose_name = 'Projekt'
        verbose_name_plural = 'Projektek'


class APrjDok(models.Model):
    prj = models.ForeignKey(Project, models.DO_NOTHING)
    dok = models.ForeignKey('XDok', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'a_prj_dok'
        unique_together = ('prj', 'dok')


class Permission(models.Model):
    prj = models.ForeignKey(Project, models.DO_NOTHING, verbose_name='Projekt')
    szm = models.ForeignKey('Person', models.DO_NOTHING, verbose_name='Személy')
    szerepkor_id = models.AutoField(primary_key=True)
    szerepkor = models.CharField(max_length=100, verbose_name='Szerepkör')
    felhasznalo = models.CharField(max_length=15, verbose_name='Felhasználó')
    jelszo = models.CharField(max_length=15, verbose_name='Jelszó')
    mikortol = models.DateTimeField(verbose_name='Mikortól')
    meddig = models.DateTimeField(verbose_name='Meddig')
    YES_NO_CHOICES = [(1, 'Igen'), (0, 'Nem')]
    faasz_szerk = models.SmallIntegerField(verbose_name='FAÁSZ szerkesztő', choices=YES_NO_CHOICES, default=0)
    ujcs_szerk = models.SmallIntegerField(verbose_name='ÚJCS szerkesztő', choices=YES_NO_CHOICES, default=0)
    anov_szerk = models.SmallIntegerField(verbose_name='ANÖV szerkesztő', choices=YES_NO_CHOICES, default=0)
    dfoto_szerk = models.SmallIntegerField(verbose_name='DFOTÓ szerkesztő', choices=YES_NO_CHOICES, default=0)
    megj_szerk = models.SmallIntegerField(verbose_name='MEGJ szerkesztő', choices=YES_NO_CHOICES, default=0)
    tterm_szerk = models.SmallIntegerField(verbose_name='', choices=YES_NO_CHOICES, default=0)
    tip_szerk = models.SmallIntegerField(verbose_name='ERDŐTIPUS szerkesztő', choices=YES_NO_CHOICES, default=0)
    mvp_szerk = models.SmallIntegerField(verbose_name='MVP szerkesztő', choices=YES_NO_CHOICES, default=0)
    tgdrk_szerk = models.SmallIntegerField(verbose_name='', choices=YES_NO_CHOICES, default=0)
    prjerh_szerk = models.SmallIntegerField(verbose_name='ERDŐháló szerkesztő', choices=YES_NO_CHOICES, default=0)
    txnk_szerk = models.SmallIntegerField(verbose_name='TAXONLISTA szerkesztő', choices=YES_NO_CHOICES, default=0)
    kesz_szerk = models.SmallIntegerField(verbose_name='KÉSZ szerkesztő', choices=YES_NO_CHOICES, default=0)

    def __str__(self):
        return self.szerepkor

    class Meta:
        managed = False
        db_table = 'a_szrpkor'
        verbose_name = 'Szerepkör'
        verbose_name_plural = 'Szerepkörök'


class AaNaplo(models.Model):
    defaultosertek = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'aa_naplo'


class ForestReserve(models.Model):
    HUNGARY = 'HU'
    AUSTRIA = 'AU'
    CZECHIA = 'CZ'
    CROATIA = 'HR'
    ROMANIA = 'RO'
    SLOVAKIA = 'SK'
    SLOVENIA = 'SI'
    SERBIA = 'RS'
    UKRAINE = 'UA'
    COUNTRY_CHOICES = [(HUNGARY, 'Magyarország'), (AUSTRIA, 'Ausztria'), (CZECHIA, 'Csehország'),
                       (CROATIA, 'Horvátország'), (ROMANIA, 'Románia'), (SLOVAKIA, 'Szlovákia'),
                       (SLOVENIA, 'Szlovénia'), (SERBIA, 'Szerbia'), (UKRAINE, 'Ukrajna')]
    EGTAJ_CHOICES = [(0, 'Nincs megadva'),
                     (1, 'Nyugat-Dunántúl'),
                     (2, 'Dél-Dunántúl'),
                     (3, 'Kisalföld'),
                     (4, 'Dunántúli középhegység'),
                     (5, 'Északi középhegység'),
                     (6, 'Nagyalföld löszvidék'),
                     (7, 'Nagyalföld homokvidék'),
                     (8, 'Nagyalföld szikes vidék'),
                     (9, 'Nagyalföld ár- és lápter.'),
                     (51, 'Száva-sík, Szerémség SRB')]

    ert_id = models.AutoField(primary_key=True)
    ert_azo = models.CharField(unique=True, max_length=25, verbose_name='Azonosító')
    ert_ssz = models.IntegerField(verbose_name='Sorszám', default=999)
    ert_nev = models.CharField(max_length=100, verbose_name='Név')
    ert_orszag = models.CharField(max_length=2, verbose_name='Ország', choices=COUNTRY_CHOICES, default=HUNGARY)
    ert_url = models.CharField(max_length=100, verbose_name='Honlap', default='https://www.erdorezervatum.hu')
    ert_lat_n_fok = models.SmallIntegerField(db_column='ert_lat_N_fok', blank=True, null=True,
                                             verbose_name='Szélesség (fok)', default=47)  # Field name made lowercase.
    ert_lat_n_perc = models.SmallIntegerField(db_column='ert_lat_N_perc', blank=True, null=True,
                                              verbose_name='Szélesség (perc)',
                                              default='0')  # Field name made lowercase.
    ert_lat_n_mperc = models.SmallIntegerField(db_column='ert_lat_N_mperc', blank=True, null=True,
                                               verbose_name='Szélesség (mperc)',
                                               default='0')  # Field name made lowercase.
    ert_lon_e_fok = models.SmallIntegerField(db_column='ert_lon_E_fok', blank=True, null=True,
                                             verbose_name='Hosszúság (fok)', default='18')  # Field name made lowercase.
    ert_lon_e_perc = models.SmallIntegerField(db_column='ert_lon_E_perc', blank=True, null=True,
                                              verbose_name='Hosszúság (perc)',
                                              default='0')  # Field name made lowercase.
    ert_lon_e_mperc = models.SmallIntegerField(db_column='ert_lon_E_mperc', blank=True, null=True,
                                               verbose_name='Hosszúság (mperc)',
                                               default='0')  # Field name made lowercase.
    novfoldrajz = models.CharField(max_length=25, blank=True, null=True)
    egnagytaj = models.IntegerField(blank=True, null=True, choices=EGTAJ_CHOICES, default=0,
                                    verbose_name='Erdőgazdasági nagytáj')

    def __str__(self):
        return self.ert_nev

    class Meta:
        managed = False
        db_table = 'b_ert'
        verbose_name = 'Erdőrezervátum'
        verbose_name_plural = 'Erdőrezervátumok'


class CJkvAdat(models.Model):
    prj = models.ForeignKey(Project, models.DO_NOTHING)
    mvp = models.ForeignKey('SamplingPoint', models.DO_NOTHING)
    jkv_adat_id = models.AutoField(primary_key=True)
    faasz_felmeresdatum = models.DateTimeField(blank=True, null=True)
    faasz_felmero_id = models.SmallIntegerField()
    faasz_jkonyvezo_id = models.SmallIntegerField()
    faasz_modszertan_id = models.SmallIntegerField()
    faa_modszertan = models.ForeignKey('XModFaa', models.DO_NOTHING)
    fae_modszertan = models.ForeignKey('XModFae', models.DO_NOTHING)
    fhf_modszertan = models.ForeignKey('XModFhf', models.DO_NOTHING)
    faasz_adatlap_ssz = models.CharField(max_length=5)
    faa_kesz = models.SmallIntegerField()
    fae_kesz = models.SmallIntegerField()
    fae_mvhanyad = models.DecimalField(max_digits=4, decimal_places=2)
    fhf_kesz = models.SmallIntegerField()
    fhf_mvhanyad = models.DecimalField(max_digits=4, decimal_places=2)
    ujcs_felmeresdatum = models.DateTimeField(blank=True, null=True)
    ujcs_felmero_id = models.SmallIntegerField()
    ujcs_jkonyvezo_id = models.SmallIntegerField()
    ujcs_modszertan = models.ForeignKey('XModUjcs', models.DO_NOTHING)
    ujcs_adatlap_ssz = models.CharField(max_length=5)
    ujcs_kesz = models.SmallIntegerField()
    ujcs_mvhanyad = models.DecimalField(max_digits=4, decimal_places=2)
    anov_felmeresdatum = models.DateTimeField(blank=True, null=True)
    anov_felmero_id = models.SmallIntegerField()
    anov_jkonyvezo_id = models.SmallIntegerField()
    anov_modszertan = models.ForeignKey('XModAnov', models.DO_NOTHING)
    anov_adatlap_ssz = models.CharField(max_length=5)
    anov_boritas = models.SmallIntegerField(blank=True, null=True)
    anov_4x7pl2 = models.BooleanField()
    anov_kesz = models.SmallIntegerField()
    anov_mvhanyad = models.DecimalField(max_digits=4, decimal_places=2)
    term_felmeresdatum = models.DateTimeField(blank=True, null=True)
    term_felmero_id = models.SmallIntegerField()
    term_jkonyvezo_id = models.SmallIntegerField()
    term_modszertan = models.ForeignKey('XModTerm', models.DO_NOTHING)
    term_adatlap_ssz = models.CharField(max_length=5)
    term_kesz = models.SmallIntegerField()
    foto_felmeresdatum = models.DateTimeField(blank=True, null=True)
    foto_felmero_id = models.SmallIntegerField()
    foto_modszertan = models.ForeignKey('XModFoto', models.DO_NOTHING)
    foto_adatlap_ssz = models.CharField(max_length=5, blank=True, null=True)
    foto_kesz = models.SmallIntegerField()
    megj_felmeresdatum = models.DateTimeField(blank=True, null=True)
    megj_felmero_id = models.SmallIntegerField()
    megj_modszertan = models.ForeignKey('XModMegj', models.DO_NOTHING)
    megj_adatlap_ssz = models.CharField(max_length=5, blank=True, null=True)
    megj_kesz = models.SmallIntegerField()
    megj_fsz_kesz = models.SmallIntegerField()
    megj_ucs_kesz = models.SmallIntegerField()
    megj_nov_kesz = models.SmallIntegerField()
    megj_trm_kesz = models.SmallIntegerField()
    tip_felmeresdatum = models.DateTimeField(blank=True, null=True)
    tip_felmero_id = models.SmallIntegerField()
    tip_modszertani = models.ForeignKey('XModTipi', models.DO_NOTHING)
    tip_adatlapssz_ssz = models.CharField(max_length=5, blank=True, null=True)
    tip_kesz = models.SmallIntegerField()
    mvpk_felmeresdatum = models.DateTimeField(blank=True, null=True)
    mvpk_felmero_id = models.SmallIntegerField()
    mvpk_modszertan = models.ForeignKey('XModMvpk', models.DO_NOTHING)
    mvpk_adatlap_ssz = models.CharField(max_length=5, blank=True, null=True)
    mvpk_kesz = models.SmallIntegerField()
    uju_kesz = models.SmallIntegerField()
    cse_kesz = models.SmallIntegerField()
    erht_kesz = models.SmallIntegerField()
    flmt_kesz = models.SmallIntegerField()

    class Meta:
        managed = False
        db_table = 'c_jkv_adat'


class CJkvtgdAdat(models.Model):
    prj = models.ForeignKey(Project, models.DO_NOTHING)
    tgd = models.ForeignKey('CTgd', models.DO_NOTHING)
    jkvtgd_adat_id = models.AutoField(primary_key=True)
    tsz_felmeresdatum = models.DateTimeField(blank=True, null=True)
    tsz_felmero_id = models.SmallIntegerField()
    tsz_jkonyvezo_id = models.SmallIntegerField()
    tsz_modszertan = models.ForeignKey('XModTszel', models.DO_NOTHING)
    tsz_adatlap_ssz = models.CharField(max_length=5)
    tsz_kesz = models.SmallIntegerField()
    tgdk_felmeresdatum = models.DateTimeField(blank=True, null=True)
    tgdk_felmero_id = models.SmallIntegerField()
    tgdk_modszertan = models.ForeignKey('XModTgdk', models.DO_NOTHING)
    tgdk_kesz = models.SmallIntegerField()

    class Meta:
        managed = False
        db_table = 'c_jkvtgd_adat'


class SamplingPoint(models.Model):
    ert = models.ForeignKey(ForestReserve, models.DO_NOTHING, verbose_name='Erdőterület', default=15)
    mvp_id = models.AutoField(primary_key=True, verbose_name='MVP ID')
    mvp_azo = models.CharField(max_length=25, verbose_name='Mintavételi pont azonosító')
    mvp_eov_x = models.DecimalField(max_digits=10, decimal_places=2, verbose_name='EOV_X', default=0)
    mvp_eov_y = models.DecimalField(max_digits=10, decimal_places=2, verbose_name='EOV_Y', default=0)
    mvp_tszfm = models.DecimalField(max_digits=4, decimal_places=0, verbose_name='Tszf magasság', default=9999)
    mvp_pontossag = models.DecimalField(max_digits=5, decimal_places=1, verbose_name='Pontosság', default=25)
    mvp_lejtesirany = models.SmallIntegerField(verbose_name='Lejtésirány (fok)', default=999)
    mvp_lejtoszog = models.SmallIntegerField(verbose_name='Lejtőszög (fok)', default=0)
    mvp_wgs84_fi = models.FloatField(blank=True, null=True, verbose_name='WGS84 (fi)')
    mvp_wgs84_lambda = models.FloatField(blank=True, null=True, verbose_name='WGS84 (lambda )')
    mvp_utm_x = models.FloatField(blank=True, null=True)
    mvp_utm_y = models.FloatField(blank=True, null=True)
    mvp_maxfa = models.IntegerField(verbose_name='Eddig felmért fák száma', default=0)
    mvp_mtvz = models.CharField(max_length=25, blank=True, null=True, verbose_name='MT vagy VZ')
    temporal_x = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    temporal_y = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    megjegyzes = models.CharField(max_length=25, blank=True, null=True, verbose_name='Megjegyzés')

    def __str__(self):
        return f'{self.ert} {self.mvp_azo}'

    class Meta:
        managed = False
        db_table = 'c_mvp'
        unique_together = (('ert', 'mvp_azo'),)
        verbose_name = 'Mintavételi pont'
        verbose_name_plural = 'Mintavételi pontok'


class CMvpAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    mvp_adat_id = models.AutoField(primary_key=True)
    jelzes_datum = models.DateTimeField()
    jelzes_covek = models.CharField(max_length=25)
    jelzes_cimke = models.CharField(max_length=25)
    jelzes_festes = models.CharField(max_length=25)
    jelzes_megjegyzes = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'c_mvp_adat'


class CTgd(models.Model):
    ert = models.ForeignKey(ForestReserve, models.DO_NOTHING)
    tgd_id = models.AutoField(primary_key=True)
    tgd_azo = models.CharField(max_length=25, blank=True, null=True)
    tgd_eov_x = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    tgd_eov_y = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    tgd_tszfm = models.DecimalField(max_digits=4, decimal_places=0, blank=True, null=True)
    tgd_pontossag = models.DecimalField(max_digits=4, decimal_places=0, blank=True, null=True)
    tgd_lejtesirany = models.SmallIntegerField(blank=True, null=True)
    tgd_lejtoszog = models.SmallIntegerField(blank=True, null=True)
    tgd_wgs84_fi = models.FloatField(blank=True, null=True)
    tgd_wgs84_lambda = models.FloatField(blank=True, null=True)
    tgd_utm_x = models.FloatField(blank=True, null=True)
    tgd_utm_y = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'c_tgd'


class CTgdAdat(models.Model):
    jkvtgd_adat = models.ForeignKey(CJkvtgdAdat, models.DO_NOTHING)
    tgd_adat_id = models.AutoField(primary_key=True)
    esemeny_datum = models.DateTimeField()
    esemeny_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'c_tgd_adat'


class DFaaAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    faa_adat_id = models.AutoField(primary_key=True)
    zarodas_ossz = models.SmallIntegerField(blank=True, null=True)
    boritas_flkszint = models.SmallIntegerField(blank=True, null=True)
    boritas_alkszint = models.SmallIntegerField(blank=True, null=True)
    boritas_csjszint = models.SmallIntegerField(blank=True, null=True)
    boritas_gyszint = models.SmallIntegerField(blank=True, null=True)
    lekesseg = models.ForeignKey('XLek', models.DO_NOTHING)
    faa_adat_kieg = models.CharField(max_length=500)

    class Meta:
        managed = False
        db_table = 'd_faa_adat'


class DFaeAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    fae = models.ForeignKey('DFaeAzo', models.DO_NOTHING)
    fae_adat_id = models.AutoField(primary_key=True)
    txn = models.ForeignKey('XTxn', models.DO_NOTHING)
    fae_txn_status = models.ForeignKey('Status', models.DO_NOTHING)
    dvkvt = models.CharField(max_length=5, blank=True, null=True)
    d130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    kerulet = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    toatmero = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    famagassag = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    csonkmagassag = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    szochelyzet = models.ForeignKey('XSzh', models.DO_NOTHING)
    pluszertek = models.BooleanField()
    egeszseg = models.ForeignKey('XEga', models.DO_NOTHING)
    korhadtsag = models.ForeignKey('XKrh', models.DO_NOTHING)
    vizhajtasossag = models.ForeignKey('XVzh', models.DO_NOTHING)
    ts_eredet = models.BooleanField()
    or_alak = models.BooleanField()
    df_alak = models.BooleanField()
    fae_adat_kieg = models.CharField(max_length=250)
    transzparencia = models.SmallIntegerField()
    legujabb = models.SmallIntegerField()
    prj_id_aktu = models.IntegerField(blank=True, null=True)
    prj_id_prev = models.IntegerField(blank=True, null=True)
    adat_sta = models.ForeignKey('XAdatSta', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'd_fae_adat'


class DFaeAzo(models.Model):
    mvp = models.ForeignKey(SamplingPoint, models.DO_NOTHING)
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    fae_id = models.AutoField(primary_key=True)
    fae_mvp_id = models.SmallIntegerField()
    fae_vtav = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    fae_dszog = models.DecimalField(max_digits=5, decimal_places=1)
    fae_mdatum = models.DateTimeField()
    fae_mszog = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    fae_szog = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)
    fae_txn = models.ForeignKey('XTxn', models.DO_NOTHING)
    fae_txn_status = models.ForeignKey('Status', models.DO_NOTHING)
    d130_azonositaskor = models.DecimalField(max_digits=5, decimal_places=1)
    eov_dy = models.FloatField(blank=True, null=True)
    eov_dx = models.FloatField(blank=True, null=True)
    nincsrfi = models.SmallIntegerField()
    indoklas = models.CharField(max_length=500)
    fae_adatokszama = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'd_fae_azo'
        unique_together = (('mvp', 'fae_mvp_id'),)


class DFhfAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    fhf_adat_id = models.AutoField(primary_key=True)
    fhf_txn_status = models.ForeignKey('Status', models.DO_NOTHING)
    fhf_txn = models.ForeignKey('XTxn', models.DO_NOTHING)
    atmero = models.SmallIntegerField()
    korhadtsag = models.ForeignKey('XKrh', models.DO_NOTHING)
    fhf_adat_megj = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'd_fhf_adat'


class Dtproperties(models.Model):
    objectid = models.IntegerField(blank=True, null=True)
    property = models.CharField(max_length=64)
    value = models.CharField(max_length=255, blank=True, null=True)
    uvalue = models.CharField(max_length=255, blank=True, null=True)
    lvalue = models.BinaryField(blank=True, null=True)
    version = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'dtproperties'
        unique_together = (('id', 'property'),)


class EUcsAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    ucs_adat_id = models.AutoField(primary_key=True)
    ucs_txn = models.ForeignKey('XTxn', models.DO_NOTHING)
    ucs_txn_status = models.ForeignKey('Status', models.DO_NOTHING)
    uju_ohjtszam = models.SmallIntegerField()
    uju_rhjtszam = models.SmallIntegerField()
    uju_adatsor = models.CharField(max_length=250)
    uju_van = models.BooleanField()
    cse_ohjtszam = models.SmallIntegerField()
    cse_rhjtszam = models.SmallIntegerField()
    cse_adatsor = models.CharField(max_length=250)
    cse_van = models.BooleanField()
    adat_sta = models.ForeignKey('XAdatSta', models.DO_NOTHING)
    ucs_adatokszama = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'e_ucs_adat'


class FNovAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    nov_adat_id = models.AutoField(primary_key=True)
    nov_txn = models.ForeignKey('XTxn', models.DO_NOTHING)
    nov_txn_status = models.ForeignKey('Status', models.DO_NOTHING)
    nov_elofordul = models.BooleanField()
    nov_boritas = models.DecimalField(max_digits=8, decimal_places=1, blank=True, null=True)
    nov_gyakorisag = models.SmallIntegerField(blank=True, null=True)
    nov_ohjtszam = models.SmallIntegerField(blank=True, null=True)
    nov_adatsor = models.CharField(max_length=250)
    fl01 = models.BooleanField()
    fl02 = models.BooleanField()
    fl03 = models.BooleanField()
    fl04 = models.BooleanField()
    fl05 = models.BooleanField()
    fl06 = models.BooleanField()
    fl07 = models.BooleanField()
    fl08 = models.BooleanField()
    fl09 = models.BooleanField()
    fl10 = models.BooleanField()
    fl11 = models.BooleanField()
    fl12 = models.BooleanField()
    fl13 = models.BooleanField()
    fl14 = models.BooleanField()
    fl15 = models.BooleanField()
    fl16 = models.BooleanField()
    fl17 = models.BooleanField()
    fl18 = models.BooleanField()
    fl19 = models.BooleanField()
    fl20 = models.BooleanField()
    fl21 = models.BooleanField()
    fl22 = models.BooleanField()
    fl23 = models.BooleanField()
    fl24 = models.BooleanField()
    fl25 = models.BooleanField()
    fl26 = models.BooleanField()
    fl27 = models.BooleanField()
    fl28 = models.BooleanField()
    fl29 = models.BooleanField()
    fl30 = models.BooleanField()
    adat_sta = models.ForeignKey('XAdatSta', models.DO_NOTHING)
    nov_adatokszama = models.IntegerField()
    nov_van = models.BooleanField()

    class Meta:
        managed = False
        db_table = 'f_nov_adat'


class GTrmAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    trm_adat_id = models.AutoField(primary_key=True)
    termohelyi_adatok = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'g_trm_adat'


class GTszAdat(models.Model):
    jkvtgd_adat = models.ForeignKey(CJkvtgdAdat, models.DO_NOTHING)
    tsz_adat_id = models.AutoField(primary_key=True)
    talajszelvÚny_adatok = models.CharField(max_length=50, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'g_tsz_adat'


class HFotAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    fot_adat_id = models.AutoField(primary_key=True)
    fot_fnev = models.CharField(max_length=50)
    fot_utvonal = models.CharField(max_length=50)
    fot_tipus = models.ForeignKey('XFtp', models.DO_NOTHING)
    fot_iranyfok = models.SmallIntegerField(blank=True, null=True)
    fot_ira = models.ForeignKey('XIra', models.DO_NOTHING)
    fot_kulcsszo = models.CharField(max_length=250)
    fot_leiras = models.CharField(max_length=250)
    adat_sta = models.ForeignKey('XAdatSta', models.DO_NOTHING)
    fot_datumido = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'h_fot_adat'


class IMgjAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    mgj_adat_id = models.AutoField(primary_key=True)
    adatlaprol = models.CharField(max_length=5, blank=True, null=True)
    adatlaprol_ssz = models.CharField(max_length=5, blank=True, null=True)
    mgj_datum = models.DateTimeField(blank=True, null=True)
    mgj_felmero_id = models.SmallIntegerField(blank=True, null=True)
    mgj_tipus = models.ForeignKey('XMjt', models.DO_NOTHING)
    mgj_szoveg = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'i_mgj_adat'


class JCsop(models.Model):
    csopprj = models.ForeignKey('JCsopprj', models.DO_NOTHING)
    csoport_id = models.AutoField(primary_key=True)
    csoport_rnev = models.CharField(max_length=25)
    csoport_nev = models.CharField(max_length=250)
    csoport_leiras = models.CharField(max_length=4000)

    class Meta:
        managed = False
        db_table = 'j_csop'


class JCsopAdat(models.Model):
    prj = models.ForeignKey(Project, models.DO_NOTHING)
    mvp = models.ForeignKey(SamplingPoint, models.DO_NOTHING)
    csoport = models.ForeignKey(JCsop, models.DO_NOTHING)
    csoport_adat_id = models.AutoField(primary_key=True)

    class Meta:
        managed = False
        db_table = 'j_csop_adat'


class JCsopprj(models.Model):
    csopprj_id = models.AutoField(primary_key=True)
    csopprj_rnev = models.CharField(db_column='csopprj-rnev',
                                    max_length=25)  # Field renamed to remove unsuitable characters.
    csopprj_nev = models.CharField(max_length=250)
    csopprj_vez = models.ForeignKey('Person', models.DO_NOTHING)
    csopprj_ev = models.SmallIntegerField()
    csopprj_leiras = models.CharField(max_length=4000)
    csopprj_url = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'j_csopprj'


class JTipAdat(models.Model):
    jkv_adat = models.ForeignKey(CJkvAdat, models.DO_NOTHING)
    tip_adat_id = models.AutoField(primary_key=True)
    tip_trm_szakerto_id = models.SmallIntegerField(blank=True, null=True)
    tip_besorolasdatum = models.DateTimeField()
    tip_formacio = models.CharField(max_length=10, blank=True, null=True)
    tip_atmenet = models.CharField(max_length=10, blank=True, null=True)
    tip_szabadon = models.CharField(max_length=150, blank=True, null=True)
    tip_aner2007_kod = models.CharField(max_length=5, blank=True, null=True)
    tip_aner2007_sta = models.CharField(max_length=5, blank=True, null=True)
    tip_n2000_kod = models.CharField(max_length=5, blank=True, null=True)
    tip_n2000_sta = models.CharField(max_length=5, blank=True, null=True)
    tip_faatip_kod = models.SmallIntegerField(blank=True, null=True)
    tip_faatip_sta = models.SmallIntegerField(blank=True, null=True)
    tip_faadin_kod = models.SmallIntegerField(blank=True, null=True)
    tip_faadin_sta = models.CharField(max_length=5, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'j_tip_adat'


class PKepek(models.Model):
    kep_id = models.AutoField(primary_key=True)
    kep_szarmazas = models.CharField(max_length=250)
    dia_meret = models.IntegerField(blank=True, null=True)
    kep_x = models.IntegerField()
    kep_y = models.IntegerField()
    kep_stream_meret = models.IntegerField()
    kep_stream_buffer = models.BinaryField()

    class Meta:
        managed = False
        db_table = 'p_kepek'


class QDatumido(models.Model):
    datumido = models.DateTimeField()
    csakdatum = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'q_datumido'


class Sysdiagrams(models.Model):
    name = models.CharField(max_length=128)
    principal_id = models.IntegerField()
    diagram_id = models.AutoField(primary_key=True)
    version = models.IntegerField(blank=True, null=True)
    definition = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sysdiagrams'
        unique_together = (('principal_id', 'name'),)


class XAdatSta(models.Model):
    adat_sta_id = models.SmallIntegerField(primary_key=True)
    adat_sta_rnev = models.CharField(max_length=10)
    adat_sta_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_adat_sta'


class Action(models.Model):
    akc_id = models.AutoField(primary_key=True)
    akc_azo = models.CharField(max_length=15)
    akc_megj = models.CharField(max_length=50)

    def __str__(self):
        return self.akc_azo

    class Meta:
        managed = False
        db_table = 'x_akc'
        verbose_name = 'Akció/Tevékenység'
        verbose_name_plural = 'Akciók/Tevékenységek'


class XAner2Natura(models.Model):
    eh_osztaly = models.CharField(max_length=255, blank=True, null=True)
    eh_fas = models.CharField(max_length=1, blank=True, null=True)
    eh_csoport = models.CharField(max_length=255, blank=True, null=True)
    aner2011 = models.CharField(max_length=255, blank=True, null=True)
    aner2011_nev = models.CharField(max_length=255, blank=True, null=True)
    aner1997 = models.CharField(max_length=255, blank=True, null=True)
    aner2003 = models.CharField(max_length=255, blank=True, null=True)
    dontes = models.CharField(max_length=255, blank=True, null=True)
    novfoldrajz = models.CharField(max_length=255, blank=True, null=True)
    n2000_kod = models.CharField(max_length=255, blank=True, null=True)
    n2000_nev = models.CharField(max_length=255, blank=True, null=True)
    n2000_megj = models.CharField(max_length=255, blank=True, null=True)
    n2000_name = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'x_aner2natura'


class XDFaeMagassagbecsleshez(models.Model):
    fae_adat_id = models.IntegerField()
    a_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxfafaj = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    a_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    b_parameter_helyxszoc = models.DecimalField(max_digits=18, decimal_places=14, blank=True, null=True)
    megj_helyxfafaj = models.CharField(max_length=25, blank=True, null=True)
    megj_helyxszoc = models.CharField(max_length=25, blank=True, null=True)
    elld130 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    elld130szoc = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'x_d_fae_magassagbecsleshez'


class XDok(models.Model):
    dok_id = models.AutoField(primary_key=True)
    dok_hiv = models.CharField(max_length=50)
    dok_url = models.CharField(max_length=150)

    class Meta:
        managed = False
        db_table = 'x_dok'


class XEga(models.Model):
    ega_id = models.AutoField(primary_key=True)
    ega_rnev = models.CharField(max_length=5)
    ega_nev = models.CharField(max_length=25)
    ega_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_ega'


class XEgtaj(models.Model):
    egtaj_id = models.IntegerField(primary_key=True)
    egtaj_rnev = models.CharField(max_length=5)
    egtaj_nev = models.CharField(max_length=25)
    egtaj_leiras = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'x_egtaj'


class XEr59Mvp(models.Model):
    mvp_azo = models.CharField(max_length=255, blank=True, null=True)
    mvp_eov_x = models.CharField(max_length=255, blank=True, null=True)
    mvp_eov_y = models.CharField(max_length=255, blank=True, null=True)
    ert_id = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'x_er59_mvp'


class XFtp(models.Model):
    ftp_id = models.AutoField(primary_key=True)
    ftp_rnev = models.CharField(max_length=10)
    ftp_nev = models.CharField(max_length=25)
    ftp_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_ftp'


class XIra(models.Model):
    ira_id = models.AutoField(primary_key=True)
    ira_rnev = models.CharField(max_length=10)
    ira_nev = models.CharField(max_length=25)
    ira_leiras = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'x_ira'


class XKlzsvprd2012(models.Model):
    klzsvprd2012 = models.CharField(db_column='KlzsVprd2012', max_length=5)  # Field name made lowercase.
    valto_d130 = models.SmallIntegerField()
    q1 = models.FloatField()
    q2 = models.FloatField()
    egntaj = models.CharField(db_column='EGNTAJ', max_length=15)  # Field name made lowercase.
    egtaj_id = models.SmallIntegerField()
    b1 = models.FloatField(blank=True, null=True)
    b2 = models.FloatField(blank=True, null=True)
    egtaj_ffaj = models.CharField(max_length=10)

    class Meta:
        managed = False
        db_table = 'x_klzsvprd2012'


class XKrh(models.Model):
    krh_id = models.AutoField(primary_key=True)
    krh_rnev = models.CharField(max_length=5)
    krh_nev = models.CharField(max_length=25)
    krh_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_krh'


class XKrlyvprd2008(models.Model):
    krlyvprd2008 = models.CharField(db_column='KrlyVprd2008', max_length=5, blank=True,
                                    null=True)  # Field name made lowercase.
    p1_ofa = models.FloatField(blank=True, null=True)
    p2_ofa = models.FloatField(blank=True, null=True)
    p3_ofa = models.FloatField(blank=True, null=True)
    p4_ofa = models.FloatField(blank=True, null=True)
    k_ofa = models.IntegerField(blank=True, null=True)
    dmax_ofa = models.IntegerField(blank=True, null=True)
    d_sz2008 = models.FloatField(db_column='D_SZ2008', blank=True, null=True)  # Field name made lowercase.
    r_sz2008 = models.FloatField(db_column='R_SZ2008', blank=True, null=True)  # Field name made lowercase.
    cf_sz2008 = models.FloatField(db_column='CF_SZ2008', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'x_krlyvprd2008'


class XKsz(models.Model):
    ksz_id = models.AutoField(primary_key=True)
    ksz_azo = models.CharField(max_length=5)
    ksz_megj = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'x_ksz'


class XLek(models.Model):
    lek_id = models.AutoField(primary_key=True)
    lek_rnev = models.CharField(max_length=5)
    lek_nev = models.CharField(max_length=25)
    lek_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_lek'


class XLog(models.Model):
    idopont = models.DateTimeField()
    ip_cim = models.CharField(max_length=15)
    parameterek = models.CharField(max_length=2000)
    szarmazaskod = models.CharField(max_length=50)
    lefutott = models.BooleanField()

    class Meta:
        managed = False
        db_table = 'x_log'


class XMjt(models.Model):
    mjt_id = models.AutoField(primary_key=True)
    mjt_rnev = models.CharField(max_length=5)
    mjt_nev = models.CharField(max_length=25)
    mjt_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_mjt'


class XModAnov(models.Model):
    mod_anov_id = models.AutoField(primary_key=True)
    mod_anov_rnev = models.CharField(max_length=5)
    mod_anov_nev = models.CharField(max_length=25)
    mod_anov_leiras = models.CharField(max_length=4000)
    anov_mintaterulet = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)
    anov_almintakor_te = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    anov_almintakor_sz = models.SmallIntegerField(blank=True, null=True)

    def __str__(self):
        return self.mod_anov_nev

    class Meta:
        managed = False
        db_table = 'x_mod_anov'


class XModFaa(models.Model):
    mod_faa_id = models.AutoField(primary_key=True)
    mod_faa_rnev = models.CharField(max_length=5)
    mod_faa_nev = models.CharField(max_length=25)
    mod_faa_leiras = models.CharField(max_length=4000)
    faa_hatokor_szorzo = models.DecimalField(max_digits=3, decimal_places=1)

    def __str__(self):
        return self.mod_faa_nev

    class Meta:
        managed = False
        db_table = 'x_mod_faa'


class XModFae(models.Model):
    mod_fae_id = models.AutoField(primary_key=True)
    mod_fae_rnev = models.CharField(max_length=5)
    mod_fae_nev = models.CharField(max_length=25)
    mod_fae_leiras = models.CharField(max_length=4000)
    faasz_mintakor_r = models.DecimalField(max_digits=5, decimal_places=2, blank=True, null=True)
    faasz_szszproba_k = models.DecimalField(max_digits=3, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_fae_nev

    class Meta:
        managed = False
        db_table = 'x_mod_fae'


class XModFhf(models.Model):
    mod_fhf_id = models.AutoField(primary_key=True)
    mod_fhf_rnev = models.CharField(max_length=5)
    mod_fhf_nev = models.CharField(max_length=25)
    mod_fhf_leiras = models.CharField(max_length=4000)
    faasz_fhflinea_h = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_fhf_nev

    class Meta:
        managed = False
        db_table = 'x_mod_fhf'


class XModFoto(models.Model):
    mod_foto_id = models.AutoField(primary_key=True)
    mod_foto_rnev = models.CharField(max_length=5)
    mod_foto_nev = models.CharField(max_length=25)
    mod_foto_leiras = models.CharField(max_length=4000)

    def __str__(self):
        return self.mod_foto_nev

    class Meta:
        managed = False
        db_table = 'x_mod_foto'


class XModMegj(models.Model):
    mod_megj_id = models.AutoField(primary_key=True)
    mod_megj_rnev = models.CharField(max_length=5)
    mod_megj_nev = models.CharField(max_length=25)
    mod_megj_leiras = models.CharField(max_length=4000)
    megj_param1 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_megj_nev

    class Meta:
        managed = False
        db_table = 'x_mod_megj'


class XModMvpk(models.Model):
    mod_mvpk_id = models.AutoField(primary_key=True)
    mod_mvpk_rnev = models.CharField(max_length=5)
    mod_mvpk_nev = models.CharField(max_length=25)
    mod_mvpk_leiras = models.CharField(max_length=4000)
    mod_mvpk_param1 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_mvpk_nev

    class Meta:
        managed = False
        db_table = 'x_mod_mvpk'


class XModTerm(models.Model):
    mod_term_id = models.AutoField(primary_key=True)
    mod_term_rnev = models.CharField(max_length=5)
    mod_term_nev = models.CharField(max_length=25)
    mod_term_leiras = models.CharField(max_length=4000)
    term_param1 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_term_nev

    class Meta:
        managed = False
        db_table = 'x_mod_term'


class XModTgdk(models.Model):
    mod_tgdk_id = models.AutoField(primary_key=True)
    mod_tgdk_rnev = models.CharField(max_length=5)
    mod_tgdk_nev = models.CharField(max_length=25)
    mod_tgdk_leiras = models.CharField(max_length=4000)
    mod_tgdk_param1 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_tgdk_nev

    class Meta:
        managed = False
        db_table = 'x_mod_tgdk'


class XModTipi(models.Model):
    mod_tip_id = models.AutoField(primary_key=True)
    mod_tip_rnev = models.CharField(max_length=5)
    mod_tip_nev = models.CharField(max_length=25)
    mod_tip_leiras = models.CharField(max_length=4000)
    tip_param1 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_tip_nev

    class Meta:
        managed = False
        db_table = 'x_mod_tipi'


class XModTszel(models.Model):
    mod_tszel_id = models.AutoField(primary_key=True)
    mod_tszel_rnev = models.CharField(max_length=5)
    mod_tszel_nev = models.CharField(max_length=25)
    mod_tszel_leiras = models.CharField(max_length=4000)
    tszel_param1 = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)

    def __str__(self):
        return self.mod_tszel_nev

    class Meta:
        managed = False
        db_table = 'x_mod_tszel'


class XModUjcs(models.Model):
    mod_ujcs_id = models.AutoField(primary_key=True)
    mod_ujcs_rnev = models.CharField(max_length=5)
    mod_ujcs_nev = models.CharField(max_length=25)
    mod_ujcs_leiras = models.CharField(max_length=4000)
    uju_mintaterulet = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)
    uju_almintakor_te = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    uju_almintakor_sz = models.SmallIntegerField(blank=True, null=True)
    csj_mintaterulet = models.DecimalField(max_digits=6, decimal_places=1, blank=True, null=True)
    csj_almintakor_te = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)
    csj_almintakor_sz = models.SmallIntegerField(blank=True, null=True)

    def __str__(self):
        return self.mod_ujcs_nev

    class Meta:
        managed = False
        db_table = 'x_mod_ujcs'


class XNtaj(models.Model):
    ntaj_id = models.IntegerField(primary_key=True)
    ntaj_rnev = models.CharField(max_length=5)
    ntaj_nev = models.CharField(max_length=25)
    ntaj_leiras = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'x_ntaj'


class Status(models.Model):
    sta_id = models.AutoField(primary_key=True)
    sta_tipus = models.CharField(max_length=25)
    sta_rnev = models.CharField(max_length=25)
    sta_leiras = models.CharField(max_length=250)

    def __str__(self):
        return self.sta_leiras

    class Meta:
        managed = False
        db_table = 'x_sta'
        verbose_name = 'Státusz'
        verbose_name_plural = 'Státuszok'


class XSzh(models.Model):
    szh_id = models.AutoField(primary_key=True)
    szh_rnev = models.CharField(max_length=5)
    szh_nev = models.CharField(max_length=25)
    szh_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_szh'


class Person(models.Model):
    szm_id = models.AutoField(primary_key=True)
    szm_rnev = models.CharField(max_length=25)
    szm_nev = models.CharField(max_length=250)

    def __str__(self):
        return self.szm_nev

    class Meta:
        managed = False
        db_table = 'x_szm'
        verbose_name = 'Személy'
        verbose_name_plural = 'Személyek'


class XSzpont(models.Model):
    szpont_id = models.IntegerField(primary_key=True)
    szpont_rnev = models.CharField(max_length=5)
    szpont_nev = models.CharField(max_length=25)
    szpont_leiras = models.CharField(max_length=250, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'x_szpont'


class XTxn(models.Model):
    NN_CHOICES = [('D', 'D'), ('M', 'M'), ('P', 'P'), ('G', 'G'), ('X', 'X')]
    TXNRANG_CHOICES = [('A', 'A'), ('AF', 'AF'), ('AGG', 'AGG'), ('F', 'F'), ('F?', 'F?'), ('FA', 'FA'), ('GEN', 'GEN'), ('H', 'H'), ('NCK', 'NCK'), ('T', 'T'), ('V', 'V')]
    FACSJE_CHOICES = [('FA', 'FA'), ('CSJE', 'CSJE')]
    HONOS_CHOICES = [('IDH', 'IDH'), ('ŐSH', 'ŐSH')]

    def get_valuelist(field_name):
        all_values = XTxn_fields.objects.exclude(**{field_name: None}).order_by(field_name).values(field_name).distinct()
        return [(v[field_name], v[field_name]) for v in all_values]
    
    CSALAD_CHOICES = get_valuelist('csalad')
    GENUS_CHOICES = get_valuelist('genus')
    ELETFORMA_CHOICES = get_valuelist('eletforma')
    GENUSVAL_CHOICES = get_valuelist('genusvalaszto')

    txn_id = models.AutoField(primary_key=True)
    txn_azo = models.CharField(max_length=10, blank=True, null=True)
    erd_kod = models.SmallIntegerField(blank=True, null=True)
    soossz = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    kod532 = models.CharField(max_length=12, blank=True, null=True)
    nn = models.CharField(max_length=5, blank=True, null=True, choices=NN_CHOICES)
    csalad = models.CharField(max_length=25, blank=True, null=True, choices=CSALAD_CHOICES)
    taxonrang = models.CharField(max_length=5, blank=True, null=True, choices=TXNRANG_CHOICES)
    genus = models.CharField(max_length=25, blank=True, null=True, choices=GENUS_CHOICES)
    species = models.CharField(max_length=25, blank=True, null=True)
    auctor = models.CharField(max_length=50, blank=True, null=True)
    istax = models.CharField(max_length=25, blank=True, null=True)
    istax_auctor = models.CharField(max_length=50, blank=True, null=True)
    magyarnev = models.CharField(max_length=50, blank=True, null=True)
    latinnev = models.CharField(max_length=100, blank=True, null=True)
    megjegyzes = models.CharField(max_length=250, blank=True, null=True)
    facsje = models.CharField(max_length=5, blank=True, null=True, choices=FACSJE_CHOICES)
    eletforma = models.CharField(max_length=10, blank=True, null=True, choices=ELETFORMA_CHOICES)
    honos = models.CharField(max_length=5, blank=True, null=True, choices=HONOS_CHOICES)
    jel_rkod = models.SmallIntegerField(blank=True, null=True)
    jel_gkod = models.SmallIntegerField(blank=True, null=True)
    jel_bkod = models.SmallIntegerField(blank=True, null=True)
    jel_tkod = models.SmallIntegerField(blank=True, null=True)
    knt_rkod = models.SmallIntegerField(blank=True, null=True)
    knt_gkod = models.SmallIntegerField(blank=True, null=True)
    knt_bkod = models.SmallIntegerField(blank=True, null=True)
    knt_vkod = models.SmallIntegerField(blank=True, null=True)
    genusvalaszto = models.CharField(max_length=50, blank=True, null=True, choices=GENUSVAL_CHOICES)
    latinnevvalaszto = models.CharField(max_length=150, blank=True, null=True)
    osztaly_fafajlatinnev_focsoport = models.CharField(max_length=50, blank=True, null=True)
    osztaly_fafajlatinnev_csoport = models.CharField(max_length=50, blank=True, null=True)
    osztaly_csjelatinnev_focsoport = models.CharField(max_length=50, blank=True, null=True)
    osztaly_csjelatinnev_csoport = models.CharField(max_length=50, blank=True, null=True)
    osztaly_gyszintlatinnev_focsoport = models.CharField(max_length=50, blank=True, null=True)
    osztaly_gyszintlatinnev_csoport = models.CharField(max_length=50, blank=True, null=True)
    vedettseg_2012 = models.CharField(max_length=3, blank=True, null=True)
    tvertek_2012 = models.SmallIntegerField(blank=True, null=True)
    gyom = models.CharField(max_length=5, blank=True, null=True)
    nitrofil = models.CharField(max_length=5, blank=True, null=True)
    klzsvprd2012 = models.CharField(max_length=5, blank=True, null=True)
    krlyvprd2008 = models.CharField(max_length=5, blank=True, null=True)

    def __str__(self):
        return self.latinnev
    
    class Meta:
        managed = False
        db_table = 'x_txn'
        verbose_name = 'Taxon'
        verbose_name_plural = 'Teljes taxonlista'


class BErtTxn(models.Model):
    SKALA_CHOICES = [(-1, 'nem fordul elő'), (0, 'előfordul'), (1, 'gyakori taxon'), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)]

    ert_values = ForestReserve.objects.exclude(ert_nev__contains='TESZT').order_by('ert_nev').values('ert_id', 'ert_nev')
    ERT_CHOICES = [(ert['ert_id'], ert['ert_nev']) for ert in ert_values]
    txn_values = XTxn.objects.order_by('latinnev').values('txn_id', 'latinnev')
    TXN_CHOICES = [(txn['txn_id'], txn['latinnev']) for txn in txn_values]

    ert_id = models.IntegerField(choices=ERT_CHOICES, verbose_name = 'ER terület')
    txn_id = models.IntegerField(choices=TXN_CHOICES, verbose_name = 'Taxon')
    gyakori_faasz = models.IntegerField(choices=SKALA_CHOICES)
    gyakori_ujcs = models.IntegerField(choices=SKALA_CHOICES)
    gyakori_anov = models.IntegerField(choices=SKALA_CHOICES)
    gyakori_ossz = models.IntegerField(blank=True, null=True)
    erttxn_id = models.AutoField(primary_key=True)
    
    def __str__(self):
        return f'{self.ert_id} {self.txn_id}'

    class Meta:
        managed = False
        db_table = 'b_ert_txn'
        unique_together = (('ert_id', 'txn_id'),)
        verbose_name = 'Taxon ER-onként'
        verbose_name_plural = 'Taxonok ER-onként'


class XTxnNtaj(models.Model):
    txn_ntaj_id = models.BigIntegerField(primary_key=True)
    txn_id = models.IntegerField()
    ntaj_id = models.IntegerField()
    szpont_id = models.IntegerField()
    ertek = models.CharField(max_length=50)

    class Meta:
        managed = False
        db_table = 'x_txn_ntaj'


class XVzh(models.Model):
    vzh_id = models.AutoField(primary_key=True)
    vzh_rnev = models.CharField(max_length=5)
    vzh_nev = models.CharField(max_length=25)
    vzh_leiras = models.CharField(max_length=250)

    class Meta:
        managed = False
        db_table = 'x_vzh'


class YLinkek(models.Model):
    link_oldal = models.CharField(max_length=10)
    link_ssz = models.IntegerField()
    link_szoveg = models.CharField(max_length=500)

    class Meta:
        managed = False
        db_table = 'y_linkek'
        unique_together = (('link_oldal', 'link_ssz'),)


class YSzinek(models.Model):
    szin_kod = models.CharField(primary_key=True, max_length=6)
    szin_r = models.SmallIntegerField()
    szin_g = models.SmallIntegerField()
    szin_b = models.SmallIntegerField()

    class Meta:
        managed = False
        db_table = 'y_szinek'


class YUzenetek(models.Model):
    hiba_kod = models.CharField(primary_key=True, max_length=10)
    hiba_uzenet = models.CharField(max_length=500)

    class Meta:
        managed = False
        db_table = 'y_uzenetek'


class ZF1P21Xx(models.Model):
    soo1p2 = models.DecimalField(db_column='SOO1P2', max_digits=8, decimal_places=2, blank=True,
                                 null=True)  # Field name made lowercase.
    csalad = models.CharField(db_column='CSALAD', max_length=50, blank=True, null=True)  # Field name made lowercase.
    kod532 = models.CharField(db_column='KOD532', max_length=12, blank=True, null=True)  # Field name made lowercase.
    magyarnev = models.CharField(db_column='MAGYARNEV', max_length=50, blank=True,
                                 null=True)  # Field name made lowercase.
    nev = models.CharField(db_column='NEV', max_length=100, blank=True, null=True)  # Field name made lowercase.
    life = models.CharField(db_column='LIFE', max_length=10, blank=True, null=True)  # Field name made lowercase.
    tz = models.CharField(db_column='TZ', max_length=10, blank=True, null=True)  # Field name made lowercase.
    wz = models.CharField(db_column='WZ', max_length=10, blank=True, null=True)  # Field name made lowercase.
    rz = models.CharField(db_column='RZ', max_length=10, blank=True, null=True)  # Field name made lowercase.
    fs = models.CharField(db_column='FS', max_length=10, blank=True, null=True)  # Field name made lowercase.
    ts = models.CharField(db_column='TS', max_length=10, blank=True, null=True)  # Field name made lowercase.
    rs = models.CharField(db_column='RS', max_length=10, blank=True, null=True)  # Field name made lowercase.
    ns = models.CharField(db_column='NS', max_length=10, blank=True, null=True)  # Field name made lowercase.
    tb = models.CharField(db_column='TB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    wb = models.CharField(db_column='WB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    rb = models.CharField(db_column='RB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    nb = models.CharField(db_column='NB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    lb = models.CharField(db_column='LB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    kb = models.CharField(db_column='KB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    sb = models.CharField(db_column='SB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    vert = models.CharField(db_column='VERT', max_length=10, blank=True, null=True)  # Field name made lowercase.
    fle = models.CharField(db_column='FLE', max_length=10, blank=True, null=True)  # Field name made lowercase.
    coenols = models.CharField(db_column='COENOLS', max_length=10, blank=True, null=True)  # Field name made lowercase.
    coenolb = models.CharField(db_column='COENOLB', max_length=10, blank=True, null=True)  # Field name made lowercase.
    simon = models.CharField(db_column='SIMON', max_length=10, blank=True, null=True)  # Field name made lowercase.
    sbt = models.CharField(db_column='SBT', max_length=10, blank=True, null=True)  # Field name made lowercase.
    sbt_val = models.CharField(db_column='SBT_VAL', max_length=10, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'z_F1P21Xx'


class ZF1P21XxId(models.Model):
    id = models.IntegerField(primary_key=True, db_column='ID')  # Field name made lowercase.
    soo1p2 = models.DecimalField(db_column='SOO1P2', max_digits=8, decimal_places=2, blank=True,
                                 null=True)  # Field name made lowercase.
    csalad = models.CharField(db_column='CSALAD', max_length=25, blank=True, null=True)  # Field name made lowercase.
    kod532 = models.CharField(db_column='KOD532', max_length=12, blank=True, null=True)  # Field name made lowercase.
    magyarnev = models.CharField(db_column='MAGYARNEV', max_length=25, blank=True,
                                 null=True)  # Field name made lowercase.
    nev = models.CharField(db_column='NEV', max_length=100, blank=True, null=True)  # Field name made lowercase.
    life = models.CharField(db_column='LIFE', max_length=10, blank=True, null=True)  # Field name made lowercase.
    tz = models.CharField(db_column='TZ', max_length=5, blank=True, null=True)  # Field name made lowercase.
    wz = models.CharField(db_column='WZ', max_length=5, blank=True, null=True)  # Field name made lowercase.
    rz = models.CharField(db_column='RZ', max_length=5, blank=True, null=True)  # Field name made lowercase.
    fs = models.CharField(db_column='FS', max_length=5, blank=True, null=True)  # Field name made lowercase.
    ts = models.CharField(db_column='TS', max_length=5, blank=True, null=True)  # Field name made lowercase.
    rs = models.CharField(db_column='RS', max_length=5, blank=True, null=True)  # Field name made lowercase.
    ns = models.CharField(db_column='NS', max_length=5, blank=True, null=True)  # Field name made lowercase.
    tb = models.CharField(db_column='TB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    wb = models.CharField(db_column='WB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    rb = models.CharField(db_column='RB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    nb = models.CharField(db_column='NB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    lb = models.CharField(db_column='LB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    kb = models.CharField(db_column='KB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    sb = models.CharField(db_column='SB', max_length=5, blank=True, null=True)  # Field name made lowercase.
    vert = models.CharField(db_column='VERT', max_length=10, blank=True, null=True)  # Field name made lowercase.
    fle = models.CharField(db_column='FLE', max_length=10, blank=True, null=True)  # Field name made lowercase.
    coenols = models.CharField(db_column='COENOLS', max_length=25, blank=True, null=True)  # Field name made lowercase.
    coenolb = models.CharField(db_column='COENOLB', max_length=25, blank=True, null=True)  # Field name made lowercase.
    simon = models.CharField(db_column='SIMON', max_length=10, blank=True, null=True)  # Field name made lowercase.
    sbt = models.CharField(db_column='SBT', max_length=10, blank=True, null=True)  # Field name made lowercase.
    sbt_val = models.CharField(db_column='SBT_VAL', max_length=10, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'z_f1p21xx_ID'


class ZF1P2Stx(models.Model):
    soo1p2 = models.DecimalField(db_column='SOO1P2', max_digits=8, decimal_places=2, blank=True,
                                 null=True)  # Field name made lowercase.
    nn = models.CharField(db_column='NN', max_length=10, blank=True, null=True)  # Field name made lowercase.
    csalad = models.CharField(db_column='CSALAD', max_length=50, blank=True, null=True)  # Field name made lowercase.
    taxon = models.CharField(db_column='TAXON', max_length=10, blank=True, null=True)  # Field name made lowercase.
    genus = models.CharField(db_column='GENUS', max_length=50, blank=True, null=True)  # Field name made lowercase.
    species = models.CharField(db_column='SPECIES', max_length=50, blank=True, null=True)  # Field name made lowercase.
    auct = models.CharField(db_column='AUCT', max_length=50, blank=True, null=True)  # Field name made lowercase.
    istax = models.CharField(db_column='ISTAX', max_length=50, blank=True, null=True)  # Field name made lowercase.
    istaxauc = models.CharField(db_column='ISTAXAUC', max_length=50, blank=True,
                                null=True)  # Field name made lowercase.
    magyarnev = models.CharField(db_column='MAGYARNEV', max_length=50, blank=True,
                                 null=True)  # Field name made lowercase.
    nev = models.CharField(db_column='NEV', max_length=100, blank=True, null=True)  # Field name made lowercase.
    f1p2 = models.CharField(db_column='F1P2', max_length=10, blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'z_f1p2_stx'
